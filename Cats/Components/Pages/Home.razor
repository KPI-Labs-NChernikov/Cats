@using System.Runtime.InteropServices
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@inject Microsoft.AspNetCore.Hosting.Server.IServer Server
@page "/"

<PageTitle>Cats</PageTitle>

<div class="container">

    <div class="row my-3">
        <div class="col">
            <h1>Your Ultimate Cat Haven</h1>
        </div></div>
    
    <div class="row my-3">
        <div class="col">
            <p class="text-muted">My IP Address is @_serverAddress <br/> Server software is @_serverName ( @($"{_serverOsDescription} {_serverOsArchitecture}".Trim()) ) @_serverFramework</p>
        </div>
    </div>

    <div class="row my-3">
<div class="col col-lg-8">
<img src="assets/main-cat.jpg" class="img-fluid" alt="Cat photo"/>
</div></div>

<div class="row my-3">
    <div class="col">
<p class="h4">Discover a world dedicated to the beauty, charm, and mystery of cats. From expert care tips and breed guides to heartwarming stories and the latest in cat health and behavior research, we bring you everything you need to celebrate your feline companions. Whether you're a lifelong cat lover or a curious newcomer, our community offers advice, inspiration, and a shared love for these incredible creatures.
Join us and explore the magic of cats — one paw at a time!</p>
</div></div>

</div>

@code
{
    private string _serverAddress = string.Empty;
    private string _serverName = string.Empty;
    private string _serverOsDescription = string.Empty;
    private string _serverOsArchitecture = string.Empty;
    private string _serverFramework = string.Empty;

    protected override Task OnInitializedAsync()
    {
        var httpContext = HttpContextAccessor.HttpContext!;
        _serverAddress = httpContext.Connection.LocalIpAddress?.MapToIPv4().ToString() ?? "Unknown address";
        
        var serverType = Server.GetType().Name;
        if (serverType.Contains("Kestrel"))
            _serverName = "Kestrel";
        else if (serverType.Contains("IIS"))
            _serverName = "IIS";
        else
            _serverName = serverType;
        _serverOsDescription = RuntimeInformation.OSDescription;
        _serverOsArchitecture = RuntimeInformation.OSArchitecture.ToString();
        _serverFramework = RuntimeInformation.FrameworkDescription;

        return Task.CompletedTask;
    }
}
