// <auto-generated />
using System;
using Cats;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cats.Migrations
{
    [DbContext(typeof(CatsDbContext))]
    partial class CatsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cats.Entities.Cat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("MaxWeight")
                        .HasColumnType("numeric");

                    b.Property<decimal>("MinWeight")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Cats");
                });

            modelBuilder.Entity("Cats.Entities.Coat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Coats");
                });

            modelBuilder.Entity("Cats.Entities.Personality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Personalities");
                });

            modelBuilder.Entity("CatsCoats", b =>
                {
                    b.Property<Guid>("CatsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CoatsId")
                        .HasColumnType("uuid");

                    b.HasKey("CatsId", "CoatsId");

                    b.HasIndex("CoatsId");

                    b.ToTable("CatsCoats");
                });

            modelBuilder.Entity("CatsPersonalities", b =>
                {
                    b.Property<Guid>("CatsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PersonalitiesId")
                        .HasColumnType("uuid");

                    b.HasKey("CatsId", "PersonalitiesId");

                    b.HasIndex("PersonalitiesId");

                    b.ToTable("CatsPersonalities");
                });

            modelBuilder.Entity("CatsCoats", b =>
                {
                    b.HasOne("Cats.Entities.Cat", null)
                        .WithMany()
                        .HasForeignKey("CatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cats.Entities.Coat", null)
                        .WithMany()
                        .HasForeignKey("CoatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CatsPersonalities", b =>
                {
                    b.HasOne("Cats.Entities.Cat", null)
                        .WithMany()
                        .HasForeignKey("CatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cats.Entities.Personality", null)
                        .WithMany()
                        .HasForeignKey("PersonalitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
